# spring.application.name=auth-service


# Настройки для MySQL
# spring.jpa.hibernate.ddl-auto=update
# spring.datasource.url=${DB_URL}
# spring.datasource.username=${DB_USER}
# spring.datasource.password=${DB_PASSWORD}

# # Enable JPA repositories
# spring.data.jpa.repositories.enabled=true


spring.security.oauth2.client.registration.google.client-id=63937361072-cfdefikord18lljvcbaohqai5chfup5n.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
# ant
# spring.security.oauth2.client.registration.google.client-id=247464265015-astrh9vll11l22scpds7rdn6q8b8bbo7.apps.googleusercontent.com
# spring.security.oauth2.client.registration.google.client-secret=RZptmh1c6LEfNhYHDLqGLqAJ


# spring.security.oauth2.client.registration.github.client-id=Ov23licDRHXGRvo7efiH
# spring.security.oauth2.client.registration.github.client-secret=96af7eedc3b0fe7a5a15fc644ab9d888792ede77
# spring.security.oauth2.client.registration.facebook.client-id=facebook-id
# spring.security.oauth2.client.registration.facebook.client-secret=facebook-secret 





# Настройки для MySQL
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/plamya?useSSL=false
spring.datasource.username=root
spring.datasource.password=qwerdsa660

# Enable JPA repositories
spring.data.jpa.repositories.enabled=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true


server.port=8080


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
